#ifndef EXPERIMENT_H
#define EXPERIMENT_H

#include "utils/types.h"

static float quadVerts[] = {
    // pos              normal              texUV
    -0.5f, -0.5f,  0.5f,    0.0,  0.0,  1.0,    0.0, 0.0,
     0.5f, -0.5f,  0.5f,    0.0,  0.0,  1.0,    1.0, 0.0,
    -0.5f,  0.5f,  0.5f,    0.0,  0.0,  1.0,    0.0, 1.0,
     0.5f,  0.5f,  0.5f,    0.0,  0.0,  1.0,    1.0, 1.0,

    -0.5f, -0.5f, -0.5f,    0.0,  0.0, -1.0,    0.0, 0.0,
     0.5f, -0.5f, -0.5f,    0.0,  0.0, -1.0,    1.0, 0.0,
    -0.5f,  0.5f, -0.5f,    0.0,  0.0, -1.0,    0.0, 1.0,
     0.5f,  0.5f, -0.5f,    0.0,  0.0, -1.0,    1.0, 1.0,

    -0.5f, -0.5f, -0.5f,   -1.0,  0.0,  0.0,    0.0, 0.0,
    -0.5f, -0.5f,  0.5f,   -1.0,  0.0,  0.0,    0.0, 1.0,
    -0.5f,  0.5f,  0.5f,   -1.0,  0.0,  0.0,    1.0, 1.0,
    -0.5f,  0.5f, -0.5f,   -1.0,  0.0,  0.0,    1.0, 0.0,

     0.5f, -0.5f, -0.5f,    1.0,  0.0,  0.0,    0.0, 0.0,
     0.5f, -0.5f,  0.5f,    1.0,  0.0,  0.0,    0.0, 1.0,
     0.5f,  0.5f,  0.5f,    1.0,  0.0,  0.0,    1.0, 1.0,
     0.5f,  0.5f, -0.5f,    1.0,  0.0,  0.0,    1.0, 0.0,
    
    -0.5f,  0.5f, -0.5f,    0.0,  1.0,  0.0,    0.0, 1.0,
     0.5f,  0.5f,  0.5f,    0.0,  1.0,  0.0,    1.0, 0.0,
    -0.5f,  0.5f,  0.5f,    0.0,  1.0,  0.0,    0.0, 0.0,
     0.5f,  0.5f, -0.5f,    0.0,  1.0,  0.0,    1.0, 1.0,

    -0.5f, -0.5f, -0.5f,    0.0, -1.0,  0.0,    0.0, 0.0,
     0.5f, -0.5f,  0.5f,    0.0, -1.0,  0.0,    1.0, 1.0,
    -0.5f, -0.5f,  0.5f,    0.0, -1.0,  0.0,    0.0, 1.0,
     0.5f, -0.5f, -0.5f,    0.0, -1.0,  0.0,    1.0, 0.0,
};
// static Vertex quadVertices[] = {
//     // Front face
//     { glm::vec3(-0.5f, -0.5f,  0.5f), glm::vec3(0.0f,  0.0f,  1.0f), glm::vec2(0.0f, 0.0f) },
//     { glm::vec3( 0.5f, -0.5f,  0.5f), glm::vec3(0.0f,  0.0f,  1.0f), glm::vec2(1.0f, 0.0f) },
//     { glm::vec3(-0.5f,  0.5f,  0.5f), glm::vec3(0.0f,  0.0f,  1.0f), glm::vec2(0.0f, 1.0f) },
//     { glm::vec3( 0.5f,  0.5f,  0.5f), glm::vec3(0.0f,  0.0f,  1.0f), glm::vec2(1.0f, 1.0f) },

//     // Back face
//     { glm::vec3(-0.5f, -0.5f, -0.5f), glm::vec3(0.0f,  0.0f, -1.0f), glm::vec2(0.0f, 0.0f) },
//     { glm::vec3( 0.5f, -0.5f, -0.5f), glm::vec3(0.0f,  0.0f, -1.0f), glm::vec2(1.0f, 0.0f) },
//     { glm::vec3(-0.5f,  0.5f, -0.5f), glm::vec3(0.0f,  0.0f, -1.0f), glm::vec2(0.0f, 1.0f) },
//     { glm::vec3( 0.5f,  0.5f, -0.5f), glm::vec3(0.0f,  0.0f, -1.0f), glm::vec2(1.0f, 1.0f) },

//     // Left face
//     { glm::vec3(-0.5f, -0.5f, -0.5f), glm::vec3(-1.0f,  0.0f,  0.0f), glm::vec2(0.0f, 0.0f) },
//     { glm::vec3(-0.5f, -0.5f,  0.5f), glm::vec3(-1.0f,  0.0f,  0.0f), glm::vec2(0.0f, 1.0f) },
//     { glm::vec3(-0.5f,  0.5f,  0.5f), glm::vec3(-1.0f,  0.0f,  0.0f), glm::vec2(1.0f, 1.0f) },
//     { glm::vec3(-0.5f,  0.5f, -0.5f), glm::vec3(-1.0f,  0.0f,  0.0f), glm::vec2(1.0f, 0.0f) },

//     // Right face
//     { glm::vec3( 0.5f, -0.5f, -0.5f), glm::vec3(1.0f,  0.0f,  0.0f), glm::vec2(0.0f, 0.0f) },
//     { glm::vec3( 0.5f, -0.5f,  0.5f), glm::vec3(1.0f,  0.0f,  0.0f), glm::vec2(0.0f, 1.0f) },
//     { glm::vec3( 0.5f,  0.5f,  0.5f), glm::vec3(1.0f,  0.0f,  0.0f), glm::vec2(1.0f, 1.0f) },
//     { glm::vec3( 0.5f,  0.5f, -0.5f), glm::vec3(1.0f,  0.0f,  0.0f), glm::vec2(1.0f, 0.0f) },

//     // Top face
//     { glm::vec3(-0.5f,  0.5f, -0.5f), glm::vec3(0.0f,  1.0f,  0.0f), glm::vec2(0.0f, 1.0f) },
//     { glm::vec3( 0.5f,  0.5f,  0.5f), glm::vec3(0.0f,  1.0f,  0.0f), glm::vec2(1.0f, 0.0f) },
//     { glm::vec3(-0.5f,  0.5f,  0.5f), glm::vec3(0.0f,  1.0f,  0.0f), glm::vec2(0.0f, 0.0f) },
//     { glm::vec3( 0.5f,  0.5f, -0.5f), glm::vec3(0.0f,  1.0f,  0.0f), glm::vec2(1.0f, 1.0f) },

//     // Bottom face
//     { glm::vec3(-0.5f, -0.5f, -0.5f), glm::vec3(0.0f, -1.0f,  0.0f), glm::vec2(0.0f, 0.0f) },
//     { glm::vec3( 0.5f, -0.5f,  0.5f), glm::vec3(0.0f, -1.0f,  0.0f), glm::vec2(1.0f, 1.0f) },
//     { glm::vec3(-0.5f, -0.5f,  0.5f), glm::vec3(0.0f, -1.0f,  0.0f), glm::vec2(0.0f, 1.0f) },
//     { glm::vec3( 0.5f, -0.5f, -0.5f), glm::vec3(0.0f, -1.0f,  0.0f), glm::vec2(1.0f, 0.0f) },
// };

static float quadLightVerts[] = {
    -0.5f, -0.5f,  0.5f,
    0.5f, -0.5f,  0.5f,
    -0.5f,  0.5f,  0.5f,
    0.5f,  0.5f,  0.5f,

    -0.5f, -0.5f, -0.5f,
    0.5f, -0.5f, -0.5f,
    -0.5f,  0.5f, -0.5f,
    0.5f,  0.5f, -0.5f,

    -0.5f, -0.5f, -0.5f,
    -0.5f, -0.5f,  0.5f,
    -0.5f,  0.5f,  0.5f,
    -0.5f,  0.5f, -0.5f,

    0.5f, -0.5f, -0.5f,
    0.5f, -0.5f,  0.5f,
    0.5f,  0.5f,  0.5f,
    0.5f,  0.5f, -0.5f,
        
    -0.5f,  0.5f, -0.5f,
    0.5f,  0.5f,  0.5f,
    -0.5f,  0.5f,  0.5f,
    0.5f,  0.5f, -0.5f,

    -0.5f, -0.5f, -0.5f,
    0.5f, -0.5f,  0.5f,
    -0.5f, -0.5f,  0.5f,
    0.5f, -0.5f, -0.5f,
};
static u32 quadInds[] = {
    0, 1, 3,
    0, 2, 3,
    4, 5, 6,
    5, 6, 7,
    8, 9, 10,
    8, 10, 11,
    12, 13, 14,
    12, 14, 15,
    16, 17, 18,
    16, 17, 19,
    20, 21, 22,
    20, 21, 23,
};

#endif